{"version":3,"file":"d-drawer.js","sourceRoot":"","sources":["../../../src/components/d-drawer/d-drawer.tsx"],"names":[],"mappings":"AAAA,OAAO,EACH,SAAS,EACT,KAAK,EAEL,IAAI,EACJ,MAAM,EACN,IAAI,EACJ,KAAK,EACL,CAAC,GACJ,MAAM,eAAe,CAAC;AAOvB,MAAM,OAAO,OAAO;IAMhB,OAAO,GAAY,KAAK,CAAC;IAGzB,KAAK,GAAW,KAAK,CAAC;IAOtB,UAAU,GAAY,KAAK,CAAC;IAK5B,MAAM,GAAW,EAAE,CAAC;IAOpB,YAAY,GAAY,IAAI,CAAC;IAO7B,SAAS,GAAW,OAAO,CAAC;IAE5B,2BAA2B;IAE3B,YAAY,CAAC,GAAW;QACpB,MAAM,IAAI,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QAC9D,IAAI,CAAC,IAAI,EAAE,CAAC;YACR,MAAM,IAAI,KAAK,CAAC,0CAA0C,CAAC,CAAC;QAChE,CAAC;IACL,CAAC;IAED,YAAY;QACR,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,OAAO,CACH,WAAK,KAAK,EAAC,mBAAmB;gBAC1B,YAAM,IAAI,EAAC,QAAQ,IAAE,IAAI,CAAC,MAAM,CAAQ,CACtC,CACT,CAAC;QACN,CAAC;aAAM,CAAC;YACJ,OAAO,IAAI,CAAC;QAChB,CAAC;IACL,CAAC;IAED,MAAM;QACF,OAAO,CACH,EAAC,IAAI,qDAAC,IAAI,EAAE,IAAI,CAAC,OAAO;YACpB,4DACI,KAAK,EAAC,UAAU,EAChB,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,GAAQ;YAC9C,4DACI,KAAK,EAAC,YAAY,EAClB,KAAK,EAAE;oBACH,KAAK,EAAE,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;wBAC7C,CAAC,CAAC,IAAI,CAAC,KAAK;wBACZ,CAAC,CAAC,MAAM;oBACZ,MAAM,EAAE,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;wBAC9C,CAAC,CAAC,IAAI,CAAC,KAAK;wBACZ,CAAC,CAAC,MAAM;iBACf;gBACA,IAAI,CAAC,YAAY,EAAE;gBAEpB,4DAAK,KAAK,EAAC,iBAAiB;oBACxB,8DAAa,CACX,CACJ,CACH,CACV,CAAC;IACN,CAAC;IAEQ,MAAM,CAAe;IAC9B,YAAY;QACR,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IAGD,KAAK,CAAC,IAAI;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACxB,CAAC;IAED,KAAK,CAAC,KAAK;QACP,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACzB,CAAC;IAED,SAAS;QACL,IAAI,IAAI,CAAC,YAAY,EAAE,CAAC;YACpB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACzB,CAAC;IACL,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACJ","sourcesContent":["import {\n    Component,\n    Event,\n    EventEmitter,\n    Host,\n    Method,\n    Prop,\n    Watch,\n    h,\n} from \"@stencil/core\";\n\n@Component({\n    tag: \"d-drawer\",\n    styleUrl: \"d-drawer.css\",\n    shadow: true,\n})\nexport class DDrawer {\n    @Prop({\n        attribute: \"show\",\n        mutable: true,\n        reflect: true,\n    })\n    visible: Boolean = false;\n\n    @Prop()\n    width: string = \"36%\";\n\n    @Prop({\n        attribute: \"show-header\",\n        mutable: true,\n        reflect: true,\n    })\n    showHeader: boolean = false;\n\n    @Prop({\n        attribute: \"header\",\n    })\n    header: string = \"\";\n\n    @Prop({\n        attribute: \"mask-closable\",\n        mutable: true,\n        reflect: true,\n    })\n    maskClosable: boolean = true;\n\n    @Prop({\n        attribute: \"placement\",\n        mutable: true,\n        reflect: true,\n    })\n    placement: string = \"right\";\n\n    /**监听传入的 placement 是否符合要求*/\n    @Watch(\"placement\")\n    validateName(val: string) {\n        const flag = [\"left\", \"right\", \"top\", \"bottom\"].includes(val);\n        if (!flag) {\n            throw new Error(\"placement 必须是 left/right/top/bottom 其中之一\");\n        }\n    }\n\n    renderHeader() {\n        if (this.showHeader) {\n            return (\n                <div class=\"ivy-drawer-header\">\n                    <slot name=\"header\">{this.header}</slot>\n                </div>\n            );\n        } else {\n            return null;\n        }\n    }\n\n    render() {\n        return (\n            <Host show={this.visible}>\n                <div\n                    class=\"ivy-mask\"\n                    onClick={this.maskClose.bind(this)}></div>\n                <div\n                    class=\"ivy-drawer\"\n                    style={{\n                        width: [\"left\", \"right\"].includes(this.placement)\n                            ? this.width\n                            : \"100%\",\n                        height: [\"top\", \"bottom\"].includes(this.placement)\n                            ? this.width\n                            : \"100%\",\n                    }}>\n                    {this.renderHeader()}\n\n                    <div class=\"ivy-drawer-body\">\n                        <slot></slot>\n                    </div>\n                </div>\n            </Host>\n        );\n    }\n\n    @Event() closed: EventEmitter;\n    closeHandler() {\n        this.closed.emit();\n    }\n\n    @Method()\n    async open() {\n        this.visible = true;\n    }\n    @Method()\n    async close() {\n        this.closeHandler();\n        this.visible = false;\n    }\n\n    maskClose() {\n        if (this.maskClosable) {\n            this.visible = false;\n        }\n    }\n}\n"]}