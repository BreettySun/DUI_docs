{"version":3,"file":"d-message.js","sourceRoot":"","sources":["../../../src/components/d-message/d-message.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAelE,MAAM,OAAO,QAAQ;IACR,QAAQ,GAAc,EAAE,CAAC;IAE1B,YAAY,CAAC,IAAqB;QACtC,QAAQ,IAAI,EAAE,CAAC;YACX,KAAK,SAAS;gBACV,OAAO,SAAS,CAAC;YACrB,KAAK,SAAS;gBACV,OAAO,SAAS,CAAC;YACrB,KAAK,OAAO;gBACR,OAAO,SAAS,CAAC;YACrB,KAAK,MAAM;gBACP,OAAO,SAAS,CAAC;YACrB;gBACI,OAAO,SAAS,CAAC;QACzB,CAAC;IACL,CAAC;IAGD,aAAa,CAAC,EAAwB;QAClC,MAAM,OAAO,GAAG,EAAE,CAAC,MAAM,CAAC;QAC1B,IAAI,CAAC,QAAQ,GAAG,CAAC,GAAG,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;QAE5C,iBAAiB;QACjB,MAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,IAAI,IAAI,CAAC;QAC1C,UAAU,CAAC,GAAG,EAAE;YACZ,MAAM,cAAc,GAAG,IAAI,CAAC,EAAE,CAAC,UAAU,EAAE,aAAa,CACpD,qBAAqB,OAAO,CAAC,EAAE,IAAI,CACtC,CAAC;YACF,IAAI,cAAc,EAAE,CAAC;gBACjB,cAAc,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;gBACzC,cAAc;gBACd,UAAU,CAAC,GAAG,EAAE;oBACZ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAChC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,OAAO,CAAC,EAAE,CAC7B,CAAC;gBACN,CAAC,EAAE,GAAG,CAAC,CAAC;YACZ,CAAC;QACL,CAAC,EAAE,QAAQ,CAAC,CAAC;IACjB,CAAC;IAEO,EAAE,CAAc;IAExB,gBAAgB;QACZ,IAAI,CAAC,EAAE,GAAG,QAAQ,CAAC,aAAa,CAAC,WAAW,CAAgB,CAAC;IACjE,CAAC;IAED,MAAM;QACF,OAAO,CACH,EAAC,IAAI;YACD,4DAAK,KAAK,EAAC,qBAAqB,IAC3B,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,CAC5B,WACI,KAAK,EAAE,wBAAwB,OAAO,CAAC,IAAI,EAAE,qBAC5B,OAAO,CAAC,EAAE,EAC3B,GAAG,EAAE,OAAO,CAAC,EAAE;gBACf,WAAK,KAAK,EAAC,oBAAoB;oBAC1B,OAAO,CAAC,IAAI,IAAI,CACb,cACI,IAAI,EAAE,OAAO,CAAC,IAAI,EAClB,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,EACtC,KAAK,EAAC,iBAAiB,GAAU,CACxC;oBACD,gBAAO,OAAO,CAAC,IAAI,CAAQ,CACzB,CACJ,CACT,CAAC,CACA,CACH,CACV,CAAC;IACN,CAAC;;;;;;;;;;;;;;;;;;;CACJ","sourcesContent":["import { Component, Host, h, State, Listen } from \"@stencil/core\";\n\ninterface Message {\n    id: number;\n    type: \"success\" | \"info\" | \"warning\" | \"error\";\n    text: string;\n    duration?: number;\n    icon?: string;\n}\n\n@Component({\n    tag: \"d-message\",\n    styleUrl: \"d-message.css\",\n    shadow: true,\n})\nexport class DMessage {\n    @State() messages: Message[] = [];\n\n    private getIconColor(type: Message[\"type\"]): string {\n        switch (type) {\n            case \"success\":\n                return \"#67C23A\";\n            case \"warning\":\n                return \"#E6A23C\";\n            case \"error\":\n                return \"#F56C6C\";\n            case \"info\":\n                return \"#909399\";\n            default:\n                return \"#909399\";\n        }\n    }\n\n    @Listen(\"d-message\", { target: \"window\" })\n    handleMessage(ev: CustomEvent<Message>) {\n        const message = ev.detail;\n        this.messages = [...this.messages, message];\n\n        // 使用自定义显示时间或默认3秒\n        const duration = message.duration || 3000;\n        setTimeout(() => {\n            const messageElement = this.el.shadowRoot?.querySelector(\n                `[data-message-id=\"${message.id}\"]`\n            );\n            if (messageElement) {\n                messageElement.classList.add(\"removing\");\n                // 等待动画结束后移除消息\n                setTimeout(() => {\n                    this.messages = this.messages.filter(\n                        (m) => m.id !== message.id\n                    );\n                }, 300);\n            }\n        }, duration);\n    }\n\n    private el: HTMLElement;\n\n    componentDidLoad() {\n        this.el = document.querySelector(\"d-message\") as HTMLElement;\n    }\n\n    render() {\n        return (\n            <Host>\n                <div class=\"d-message-container\">\n                    {this.messages.map((message) => (\n                        <div\n                            class={`d-message d-message--${message.type}`}\n                            data-message-id={message.id}\n                            key={message.id}>\n                            <div class=\"d-message__content\">\n                                {message.icon && (\n                                    <d-icon\n                                        name={message.icon}\n                                        color={this.getIconColor(message.type)}\n                                        class=\"d-message__icon\"></d-icon>\n                                )}\n                                <span>{message.text}</span>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            </Host>\n        );\n    }\n}\n"]}