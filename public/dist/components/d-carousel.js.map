{"file":"d-carousel.js","mappings":"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","names":["DCarousel","__stencil_proxyCustomElement","HTMLElement"],"sources":["src/components/d-carousel/d-carousel.css?tag=d-carousel&encapsulation=shadow","src/components/d-carousel/d-carousel.tsx"],"sourcesContent":[":host {\n    display: block;\n    position: relative;\n}\n\n.carousel-container {\n    width: 100%;\n    height: 100%;\n    position: relative;\n    overflow: hidden;\n}\n\n/* 箭头控制按钮基本样式 */\n.carousel-controls {\n    position: absolute;\n    z-index: 10;\n}\n\n.arrow-control {\n    background: rgba(0, 0, 0, 0.3);\n    color: white;\n    border: none;\n    border-radius: 50%;\n    width: 40px;\n    height: 40px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    transition: background-color 0.3s;\n    padding: 0;\n}\n\n.arrow-control:hover {\n    background: rgba(0, 0, 0, 0.6);\n}\n\n/* 水平箭头位置 */\n:host([indicator-position=\"top\"]) .carousel-controls,\n:host([indicator-position=\"bottom\"]) .carousel-controls {\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    padding: 0 10px;\n}\n\n/* 垂直箭头位置 */\n:host([indicator-position=\"left\"]) .carousel-controls,\n:host([indicator-position=\"right\"]) .carousel-controls {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    justify-content: space-between;\n    top: 0;\n    padding: 10px 0;\n}\n\n:host([indicator-position=\"left\"]) .carousel-controls {\n    right: 10px;\n}\n\n:host([indicator-position=\"right\"]) .carousel-controls {\n    left: 10px;\n}\n\n:host([indicator-position=\"top\"]) .carousel-controls {\n    bottom: 10px;\n}\n\n:host([indicator-position=\"bottom\"]) .carousel-controls {\n    top: 10px;\n}\n\n/* 指示器基本样式 */\n.carousel-indicators {\n    display: flex;\n    position: absolute;\n    z-index: 10;\n}\n\n/* 水平指示器 */\n.carousel-indicators-top,\n.carousel-indicators-bottom {\n    flex-direction: row;\n    justify-content: center;\n    width: 100%;\n    left: 0; /* 确保水平居中 */\n}\n\n.carousel-indicators-top {\n    top: 10px;\n}\n\n.carousel-indicators-bottom {\n    bottom: 10px;\n}\n\n/* 垂直指示器 */\n.carousel-indicators-left,\n.carousel-indicators-right {\n    flex-direction: column;\n    justify-content: center;\n    height: 100%;\n    top: 0; /* 确保垂直居中 */\n}\n\n.carousel-indicators-left {\n    left: 10px;\n}\n\n.carousel-indicators-right {\n    right: 10px;\n}\n\n/* 指示器点样式 */\n.indicator {\n    width: 10px;\n    height: 10px;\n    border-radius: 50%;\n    background-color: rgba(255, 255, 255, 0.5);\n    margin: 5px;\n    cursor: pointer;\n    transition: background-color 0.3s;\n}\n\n.indicator.active {\n    background-color: white;\n}\n","import {\n    Component,\n    Host,\n    h,\n    State,\n    Element,\n    Prop,\n    Watch,\n    Method,\n} from \"@stencil/core\";\n\n/**\n * @slot - 默认插槽，用于放置轮播内容\n */\n@Component({\n    tag: \"d-carousel\",\n    styleUrl: \"d-carousel.css\",\n    shadow: true,\n})\nexport class DCarousel {\n    @State() currentIndex: number = 0;\n    @State() itemsCount: number = 0;\n    @Element() el: HTMLElement;\n\n    /**\n     * 是否自动播放\n     */\n    @Prop() autoplay: boolean = false;\n\n    /**\n     * 自动播放间隔时间（毫秒）\n     */\n    @Prop() delay: number = 3000;\n\n    /**\n     * 指示器位置，可选值：top、bottom、left、right\n     */\n    @Prop() indicatorPosition: \"top\" | \"bottom\" | \"left\" | \"right\" = \"bottom\";\n\n    private items: HTMLElement[] = [];\n    private autoplayInterval: number;\n\n    componentDidLoad() {\n        // 获取所有子元素作为轮播项\n        this.items = Array.from(this.el.children) as HTMLElement[];\n        // 更新状态以触发重新渲染\n        this.itemsCount = this.items.length;\n\n        // 显示第一个轮播项\n        this.showSlide(this.currentIndex);\n\n        // 如果启用了自动播放，开始自动播放\n        if (this.autoplay) {\n            this.startAutoplay();\n        }\n    }\n\n    disconnectedCallback() {\n        this.stopAutoplay();\n    }\n\n    @Watch(\"autoplay\")\n    autoplayChanged(newValue: boolean) {\n        if (newValue) {\n            this.startAutoplay();\n        } else {\n            this.stopAutoplay();\n        }\n    }\n\n    @Watch(\"delay\")\n    delayChanged() {\n        if (this.autoplay) {\n            this.startAutoplay(); // 重新启动自动播放以应用新的延迟\n        }\n    }\n\n    private startAutoplay() {\n        this.stopAutoplay(); // 先停止之前的自动播放\n        this.autoplayInterval = window.setInterval(() => {\n            this.nextSlide();\n        }, this.delay);\n    }\n\n    private stopAutoplay() {\n        if (this.autoplayInterval) {\n            window.clearInterval(this.autoplayInterval);\n        }\n    }\n\n    private showSlide(index: number) {\n        // 确保索引在有效范围内\n        if (this.items.length === 0) return;\n\n        this.currentIndex = index;\n\n        // 隐藏所有轮播项，只显示当前索引的项\n        this.items.forEach((item, i) => {\n            item.style.display = i === index ? \"block\" : \"none\";\n        });\n    }\n\n    /**\n     * 手动切换到下一张幻灯片\n     */\n    @Method()\n    async nextSlide() {\n        if (this.items.length === 0) return;\n        this.currentIndex = (this.currentIndex + 1) % this.items.length;\n        this.showSlide(this.currentIndex);\n    }\n\n    /**\n     * 手动切换到上一张幻灯片\n     */\n    @Method()\n    async prevSlide() {\n        if (this.items.length === 0) return;\n        this.currentIndex =\n            (this.currentIndex - 1 + this.items.length) % this.items.length;\n        this.showSlide(this.currentIndex);\n    }\n\n    /**\n     * 手动切换到指定索引的幻灯片\n     * @param index 幻灯片索引\n     */\n    @Method()\n    async goToSlide(index: number) {\n        if (index >= 0 && index < this.items.length) {\n            this.showSlide(index);\n        }\n    }\n\n    render() {\n        // 计算指示器位置的样式\n        const indicatorStyle = {};\n\n        if (this.indicatorPosition === \"top\") {\n            Object.assign(indicatorStyle, {\n                top: \"10px\",\n                left: \"0\",\n                width: \"100%\",\n            });\n        } else if (this.indicatorPosition === \"bottom\") {\n            Object.assign(indicatorStyle, {\n                bottom: \"10px\",\n                left: \"0\",\n                width: \"100%\",\n            });\n        } else if (this.indicatorPosition === \"left\") {\n            Object.assign(indicatorStyle, {\n                left: \"10px\",\n                top: \"0\",\n                height: \"100%\",\n            });\n        } else if (this.indicatorPosition === \"right\") {\n            Object.assign(indicatorStyle, {\n                right: \"10px\",\n                top: \"0\",\n                height: \"100%\",\n            });\n        }\n\n        return (\n            <Host>\n                <div\n                    class=\"carousel-container\"\n                    part=\"carousel\">\n                    <slot></slot>\n                </div>\n\n                {this.itemsCount > 0 && (\n                    <div\n                        class=\"carousel-indicators\"\n                        part=\"indicators\"\n                        style={{\n                            display: \"flex\",\n                            position: \"absolute\",\n                            zIndex: \"10\",\n                            flexDirection:\n                                this.indicatorPosition === \"left\" ||\n                                this.indicatorPosition === \"right\"\n                                    ? \"column\"\n                                    : \"row\",\n                            justifyContent: \"center\",\n                            ...indicatorStyle,\n                        }}>\n                        {Array.from({ length: this.itemsCount }).map((_, i) => (\n                            <div\n                                class={`indicator ${\n                                    i === this.currentIndex ? \"active\" : \"\"\n                                }`}\n                                part={`indicator ${\n                                    i === this.currentIndex\n                                        ? \"indicator-active\"\n                                        : \"\"\n                                }`}\n                                onClick={() => this.showSlide(i)}\n                            />\n                        ))}\n                    </div>\n                )}\n\n                {/* <div\n                    class=\"carousel-controls\"\n                    part=\"controls\">\n                    <button\n                        class={`arrow-control arrow-${\n                            this.indicatorPosition === \"left\" ||\n                            this.indicatorPosition === \"right\"\n                                ? \"up\"\n                                : \"prev\"\n                        }`}\n                        part=\"arrow prev-arrow\"\n                        onClick={() => this.prevSlide()}>\n                        <d-icon\n                            name={\n                                this.indicatorPosition === \"left\" ||\n                                this.indicatorPosition === \"right\"\n                                    ? \"arrow-upward\"\n                                    : \"arrow-back\"\n                            }\n                            color=\"white\"\n                            size=\"24px\"\n                        />\n                    </button>\n                    <button\n                        class={`arrow-control arrow-${\n                            this.indicatorPosition === \"left\" ||\n                            this.indicatorPosition === \"right\"\n                                ? \"down\"\n                                : \"next\"\n                        }`}\n                        part=\"arrow next-arrow\"\n                        onClick={() => this.nextSlide()}>\n                        <d-icon\n                            name={\n                                this.indicatorPosition === \"left\" ||\n                                this.indicatorPosition === \"right\"\n                                    ? \"arrow-downward\"\n                                    : \"arrow-forward\"\n                            }\n                            color=\"white\"\n                            size=\"24px\"\n                        />\n                    </button>\n                </div> */}\n            </Host>\n        );\n    }\n}\n"],"version":3}