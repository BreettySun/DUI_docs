{"file":"d-drawer.js","mappings":";;AAAA,MAAM,UAAU,GAAG,2uDAA2uD;;MCgBjvDA,SAAO,iBAAAC,kBAAA,CAAA,MAAA,OAAA,SAAAC,CAAA,CAAA;;;;;;;IAMhB,OAAO,GAAY,KAAK;IAGxB,KAAK,GAAW,KAAK;IAOrB,UAAU,GAAY,KAAK;IAK3B,MAAM,GAAW,EAAE;IAOnB,YAAY,GAAY,IAAI;IAO5B,SAAS,GAAW,OAAO;;AAI3B,IAAA,YAAY,CAAC,GAAW,EAAA;AACpB,QAAA,MAAM,IAAI,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC;QAC7D,IAAI,CAAC,IAAI,EAAE;AACP,YAAA,MAAM,IAAI,KAAK,CAAC,0CAA0C,CAAC;;;IAInE,YAAY,GAAA;AACR,QAAA,IAAI,IAAI,CAAC,UAAU,EAAE;YACjB,QACI,CAAA,CAAA,KAAA,EAAA,EAAK,KAAK,EAAC,mBAAmB,EAAA,EAC1B,CAAM,CAAA,MAAA,EAAA,EAAA,IAAI,EAAC,QAAQ,EAAE,EAAA,IAAI,CAAC,MAAM,CAAQ,CACtC;;aAEP;AACH,YAAA,OAAO,IAAI;;;IAInB,MAAM,GAAA;QACF,QACI,EAAC,IAAI,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAC,IAAI,EAAE,IAAI,CAAC,OAAO,EAAA,EACpB,CAAA,CAAA,KAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EACI,KAAK,EAAC,UAAU,EAChB,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,EAAQ,CAAA,EAC9C,CAAA,CAAA,KAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EACI,KAAK,EAAC,YAAY,EAClB,KAAK,EAAE;AACH,gBAAA,KAAK,EAAE,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS;sBAC1C,IAAI,CAAC;AACP,sBAAE,MAAM;AACZ,gBAAA,MAAM,EAAE,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS;sBAC3C,IAAI,CAAC;AACP,sBAAE,MAAM;AACf,aAAA,EAAA,EACA,IAAI,CAAC,YAAY,EAAE,EAEpB,CAAK,CAAA,KAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,KAAK,EAAC,iBAAiB,EAAA,EACxB,CAAA,CAAA,MAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,CAAa,CACX,CACJ,CACH;;AAIN,IAAA,MAAM;IACf,YAAY,GAAA;AACR,QAAA,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE;;AAItB,IAAA,MAAM,IAAI,GAAA;AACN,QAAA,IAAI,CAAC,OAAO,GAAG,IAAI;;AAGvB,IAAA,MAAM,KAAK,GAAA;QACP,IAAI,CAAC,YAAY,EAAE;AACnB,QAAA,IAAI,CAAC,OAAO,GAAG,KAAK;;IAGxB,SAAS,GAAA;AACL,QAAA,IAAI,IAAI,CAAC,YAAY,EAAE;AACnB,YAAA,IAAI,CAAC,OAAO,GAAG,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["DDrawer","__stencil_proxyCustomElement","HTMLElement"],"sources":["src/components/d-drawer/d-drawer.css?tag=d-drawer&encapsulation=shadow","src/components/d-drawer/d-drawer.tsx"],"sourcesContent":[":host {\n    position: fixed;\n    left: 0;\n    top: 0;\n    z-index: 8000;\n    width: 100vw;\n    height: 100vh;\n    display: none;\n    overflow: hidden;\n    transition: all 0.3s;\n}\n.ivy-mask {\n    position: absolute;\n    left: 0;\n    top: 0;\n    z-index: -1;\n    width: 100%;\n    height: 100%;\n    background-color: var(--ivy-mask-color, rgba(55, 55, 55, 0.6));\n}\n.ivy-drawer {\n    position: absolute;\n    z-index: 1;\n    height: 100%;\n    background-color: #ffffff;\n}\n.ivy-drawer-header {\n    padding: 12px 16px;\n    border-bottom: 1px solid var(--ivy-border-color, #dcdfe6);\n    display: none;\n}\n:host([show-header]) .ivy-drawer-header {\n    display: block;\n}\n.ivy-drawer-body {\n    padding: 16px;\n}\n\n:host([show]) {\n    display: block;\n}\n:host([show]) .ivy-drawer {\n    animation-delay: 0.05s;\n    animation-duration: 0.3s;\n    animation-fill-mode: forwards;\n}\n\n:host([placement=\"right\"]) .ivy-drawer {\n    right: 0;\n    top: 0;\n    transform: translate3d(100%, 0, 0);\n}\n:host([placement=\"right\"][show]) .ivy-drawer {\n    animation-name: slideInRight;\n}\n\n:host([placement=\"left\"]) .ivy-drawer {\n    left: 0;\n    top: 0;\n    transform: translate3d(-100%, 0, 0);\n}\n:host([placement=\"left\"][show]) .ivy-drawer {\n    animation-name: slideInLeft;\n}\n\n:host([placement=\"top\"]) .ivy-drawer {\n    left: 0;\n    top: 0;\n    transform: translate3d(0, -100%, 0);\n}\n:host([placement=\"top\"][show]) .ivy-drawer {\n    animation-name: slideInDown;\n}\n\n:host([placement=\"bottom\"]) .ivy-drawer {\n    left: 0;\n    bottom: 0;\n    transform: translate3d(0, 100%, 0);\n}\n:host([placement=\"bottom\"][show]) .ivy-drawer {\n    animation-name: slideInUp;\n}\n\n@keyframes slideInLeft {\n    from {\n        transform: translate3d(-100%, 0, 0);\n        visibility: visible;\n    }\n\n    to {\n        transform: translate3d(0, 0, 0);\n    }\n}\n\n@keyframes slideInRight {\n    from {\n        transform: translate3d(100%, 0, 0);\n        visibility: visible;\n    }\n\n    to {\n        transform: translate3d(0, 0, 0);\n    }\n}\n\n@keyframes slideInDown {\n    from {\n        transform: translate3d(0, -100%, 0);\n        visibility: visible;\n    }\n\n    to {\n        transform: translate3d(0, 0, 0);\n    }\n}\n\n@keyframes slideInUp {\n    from {\n        transform: translate3d(0, 100%, 0);\n        visibility: visible;\n    }\n\n    to {\n        transform: translate3d(0, 0, 0);\n    }\n}\n","import {\n    Component,\n    Event,\n    EventEmitter,\n    Host,\n    Method,\n    Prop,\n    Watch,\n    h,\n} from \"@stencil/core\";\n\n@Component({\n    tag: \"d-drawer\",\n    styleUrl: \"d-drawer.css\",\n    shadow: true,\n})\nexport class DDrawer {\n    @Prop({\n        attribute: \"show\",\n        mutable: true,\n        reflect: true,\n    })\n    visible: Boolean = false;\n\n    @Prop()\n    width: string = \"36%\";\n\n    @Prop({\n        attribute: \"show-header\",\n        mutable: true,\n        reflect: true,\n    })\n    showHeader: boolean = false;\n\n    @Prop({\n        attribute: \"header\",\n    })\n    header: string = \"\";\n\n    @Prop({\n        attribute: \"mask-closable\",\n        mutable: true,\n        reflect: true,\n    })\n    maskClosable: boolean = true;\n\n    @Prop({\n        attribute: \"placement\",\n        mutable: true,\n        reflect: true,\n    })\n    placement: string = \"right\";\n\n    /**监听传入的 placement 是否符合要求*/\n    @Watch(\"placement\")\n    validateName(val: string) {\n        const flag = [\"left\", \"right\", \"top\", \"bottom\"].includes(val);\n        if (!flag) {\n            throw new Error(\"placement 必须是 left/right/top/bottom 其中之一\");\n        }\n    }\n\n    renderHeader() {\n        if (this.showHeader) {\n            return (\n                <div class=\"ivy-drawer-header\">\n                    <slot name=\"header\">{this.header}</slot>\n                </div>\n            );\n        } else {\n            return null;\n        }\n    }\n\n    render() {\n        return (\n            <Host show={this.visible}>\n                <div\n                    class=\"ivy-mask\"\n                    onClick={this.maskClose.bind(this)}></div>\n                <div\n                    class=\"ivy-drawer\"\n                    style={{\n                        width: [\"left\", \"right\"].includes(this.placement)\n                            ? this.width\n                            : \"100%\",\n                        height: [\"top\", \"bottom\"].includes(this.placement)\n                            ? this.width\n                            : \"100%\",\n                    }}>\n                    {this.renderHeader()}\n\n                    <div class=\"ivy-drawer-body\">\n                        <slot></slot>\n                    </div>\n                </div>\n            </Host>\n        );\n    }\n\n    @Event() closed: EventEmitter;\n    closeHandler() {\n        this.closed.emit();\n    }\n\n    @Method()\n    async open() {\n        this.visible = true;\n    }\n    @Method()\n    async close() {\n        this.closeHandler();\n        this.visible = false;\n    }\n\n    maskClose() {\n        if (this.maskClosable) {\n            this.visible = false;\n        }\n    }\n}\n"],"version":3}