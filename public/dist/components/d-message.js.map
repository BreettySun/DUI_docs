{"file":"d-message.js","mappings":";;;AAAA,MAAM,WAAW,GAAG,ikCAAikC;;MCexkCA,UAAQ,iBAAAC,kBAAA,CAAA,MAAA,QAAA,SAAAC,CAAA,CAAA;;;;;;IACR,QAAQ,GAAc,EAAE;AAEzB,IAAA,YAAY,CAAC,IAAqB,EAAA;QACtC,QAAQ,IAAI;AACR,YAAA,KAAK,SAAS;AACV,gBAAA,OAAO,SAAS;AACpB,YAAA,KAAK,SAAS;AACV,gBAAA,OAAO,SAAS;AACpB,YAAA,KAAK,OAAO;AACR,gBAAA,OAAO,SAAS;AACpB,YAAA,KAAK,MAAM;AACP,gBAAA,OAAO,SAAS;AACpB,YAAA;AACI,gBAAA,OAAO,SAAS;;;AAK5B,IAAA,aAAa,CAAC,EAAwB,EAAA;AAClC,QAAA,MAAM,OAAO,GAAG,EAAE,CAAC,MAAM;QACzB,IAAI,CAAC,QAAQ,GAAG,CAAC,GAAG,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC;;AAG3C,QAAA,MAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,IAAI,IAAI;QACzC,UAAU,CAAC,MAAK;AACZ,YAAA,MAAM,cAAc,GAAG,IAAI,CAAC,EAAE,CAAC,UAAU,EAAE,aAAa,CACpD,qBAAqB,OAAO,CAAC,EAAE,CAAA,EAAA,CAAI,CACtC;YACD,IAAI,cAAc,EAAE;AAChB,gBAAA,cAAc,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC;;gBAExC,UAAU,CAAC,MAAK;oBACZ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAChC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,OAAO,CAAC,EAAE,CAC7B;iBACJ,EAAE,GAAG,CAAC;;SAEd,EAAE,QAAQ,CAAC;;AAGR,IAAA,EAAE;IAEV,gBAAgB,GAAA;QACZ,IAAI,CAAC,EAAE,GAAG,QAAQ,CAAC,aAAa,CAAC,WAAW,CAAgB;;IAGhE,MAAM,GAAA;AACF,QAAA,QACI,EAAC,IAAI,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,EACD,CAAA,CAAA,KAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAK,KAAK,EAAC,qBAAqB,EAAA,EAC3B,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAO,MACvB,CACI,CAAA,KAAA,EAAA,EAAA,KAAK,EAAE,CAAwB,qBAAA,EAAA,OAAO,CAAC,IAAI,CAAE,CAAA,EAAA,iBAAA,EAC5B,OAAO,CAAC,EAAE,EAC3B,GAAG,EAAE,OAAO,CAAC,EAAE,EAAA,EACf,CAAK,CAAA,KAAA,EAAA,EAAA,KAAK,EAAC,oBAAoB,EAAA,EAC1B,OAAO,CAAC,IAAI,KACT,CAAA,CAAA,QAAA,EAAA,EACI,IAAI,EAAE,OAAO,CAAC,IAAI,EAClB,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,EACtC,KAAK,EAAC,iBAAiB,EAAA,CAAU,CACxC,EACD,CAAO,CAAA,MAAA,EAAA,IAAA,EAAA,OAAO,CAAC,IAAI,CAAQ,CACzB,CACJ,CACT,CAAC,CACA,CACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["DMessage","__stencil_proxyCustomElement","HTMLElement"],"sources":["src/components/d-message/d-message.css?tag=d-message&encapsulation=shadow","src/components/d-message/d-message.tsx"],"sourcesContent":[":host {\n    position: fixed;\n    top: 20px;\n    left: 50%;\n    transform: translateX(-50%);\n    z-index: 9999;\n}\n\n.d-message-container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 10px;\n}\n\n.d-message {\n    padding: 10px 20px;\n    border-radius: 4px;\n    box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n    animation: message-fade-in 0.3s ease-in-out;\n    opacity: 1;\n    transform: translateY(0);\n    transition: all 0.3s ease-in-out;\n}\n\n.d-message.removing {\n    opacity: 0;\n    transform: translateY(-20px);\n}\n\n.d-message__content {\n    font-size: 14px;\n    line-height: 1.5;\n    display: flex;\n    align-items: center;\n    gap: 8px;\n}\n\n.d-message__icon {\n    width: 16px;\n}\n\n.d-message--success {\n    background-color: #f0f9eb;\n    color: #67c23a;\n    border: 1px solid #e1f3d8;\n}\n\n.d-message--warning {\n    background-color: #fdf6ec;\n    color: #e6a23c;\n    border: 1px solid #faecd8;\n}\n\n.d-message--error {\n    background-color: #fef0f0;\n    color: #f56c6c;\n    border: 1px solid #fde2e2;\n}\n\n.d-message--info {\n    background-color: #f4f4f5;\n    color: #909399;\n    border: 1px solid #e9e9eb;\n}\n\n@keyframes message-fade-in {\n    from {\n        opacity: 0;\n        transform: translateY(-20px);\n    }\n    to {\n        opacity: 1;\n        transform: translateY(0);\n    }\n}\n\n@keyframes message-fade-out {\n    from {\n        opacity: 1;\n        transform: translateY(0);\n    }\n    to {\n        opacity: 0;\n        transform: translateY(-20px);\n    }\n}\n","import { Component, Host, h, State, Listen } from \"@stencil/core\";\n\ninterface Message {\n    id: number;\n    type: \"success\" | \"info\" | \"warning\" | \"error\";\n    text: string;\n    duration?: number;\n    icon?: string;\n}\n\n@Component({\n    tag: \"d-message\",\n    styleUrl: \"d-message.css\",\n    shadow: true,\n})\nexport class DMessage {\n    @State() messages: Message[] = [];\n\n    private getIconColor(type: Message[\"type\"]): string {\n        switch (type) {\n            case \"success\":\n                return \"#67C23A\";\n            case \"warning\":\n                return \"#E6A23C\";\n            case \"error\":\n                return \"#F56C6C\";\n            case \"info\":\n                return \"#909399\";\n            default:\n                return \"#909399\";\n        }\n    }\n\n    @Listen(\"d-message\", { target: \"window\" })\n    handleMessage(ev: CustomEvent<Message>) {\n        const message = ev.detail;\n        this.messages = [...this.messages, message];\n\n        // 使用自定义显示时间或默认3秒\n        const duration = message.duration || 3000;\n        setTimeout(() => {\n            const messageElement = this.el.shadowRoot?.querySelector(\n                `[data-message-id=\"${message.id}\"]`\n            );\n            if (messageElement) {\n                messageElement.classList.add(\"removing\");\n                // 等待动画结束后移除消息\n                setTimeout(() => {\n                    this.messages = this.messages.filter(\n                        (m) => m.id !== message.id\n                    );\n                }, 300);\n            }\n        }, duration);\n    }\n\n    private el: HTMLElement;\n\n    componentDidLoad() {\n        this.el = document.querySelector(\"d-message\") as HTMLElement;\n    }\n\n    render() {\n        return (\n            <Host>\n                <div class=\"d-message-container\">\n                    {this.messages.map((message) => (\n                        <div\n                            class={`d-message d-message--${message.type}`}\n                            data-message-id={message.id}\n                            key={message.id}>\n                            <div class=\"d-message__content\">\n                                {message.icon && (\n                                    <d-icon\n                                        name={message.icon}\n                                        color={this.getIconColor(message.type)}\n                                        class=\"d-message__icon\"></d-icon>\n                                )}\n                                <span>{message.text}</span>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            </Host>\n        );\n    }\n}\n"],"version":3}