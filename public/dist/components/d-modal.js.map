{"file":"d-modal.js","mappings":"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","names":["DModal","__stencil_proxyCustomElement","HTMLElement"],"sources":["src/components/d-modal/d-modal.css?tag=d-modal&encapsulation=shadow","src/components/d-modal/d-modal.tsx"],"sourcesContent":[":host {\n    position: fixed;\n    left: 0;\n    top: 0;\n    z-index: 8000;\n    width: 100vw;\n    height: 100vh;\n    display: none;\n    overflow: hidden;\n    transition: all 0.3s;\n}\n\n.ivy-mask {\n    position: absolute;\n    left: 0;\n    top: 0;\n    z-index: -1;\n    width: 100%;\n    height: 100%;\n    background-color: var(--ivy-mask-color, rgba(55, 55, 55, 0.6));\n}\n\n.ivy-modal {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%) scale(0.5);\n    z-index: 1;\n    background-color: #ffffff;\n    border-radius: 4px;\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n    opacity: 0;\n    transition: all 0.3s ease-in-out;\n}\n\n:host([show]) {\n    display: block;\n}\n\n:host([show]) .ivy-modal {\n    transform: translate(-50%, -50%) scale(1);\n    opacity: 1;\n}\n\n.ivy-modal-header {\n    padding: 16px 24px;\n    border-bottom: 1px solid var(--ivy-border-color, #dcdfe6);\n    display: none;\n}\n\n:host([show-header]) .ivy-modal-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.ivy-modal-title {\n    font-size: 16px;\n    font-weight: 500;\n    color: rgba(0, 0, 0, 0.85);\n}\n\n.ivy-modal-close {\n    font-size: 20px;\n    color: rgba(0, 0, 0, 0.45);\n    cursor: pointer;\n    transition: color 0.3s;\n}\n\n.ivy-modal-close:hover {\n    color: rgba(0, 0, 0, 0.85);\n}\n\n.ivy-modal-body {\n    padding: 24px;\n    max-height: calc(100vh - 200px);\n    overflow-y: auto;\n}\n\n.ivy-modal-footer {\n    padding: 10px 24px;\n    border-top: 1px solid var(--ivy-border-color, #dcdfe6);\n    text-align: right;\n    display: none;\n}\n\n:host([show-footer]) .ivy-modal-footer {\n    display: block;\n}\n\n.ivy-modal-btn {\n    padding: 4px 15px;\n    font-size: 14px;\n    border-radius: 2px;\n    cursor: pointer;\n    transition: all 0.3s;\n    margin-left: 8px;\n    border: 1px solid transparent;\n}\n\n.ivy-modal-btn-cancel {\n    background: #fff;\n    border-color: #d9d9d9;\n    color: rgba(0, 0, 0, 0.65);\n}\n\n.ivy-modal-btn-cancel:hover {\n    color: #40a9ff;\n    border-color: #40a9ff;\n}\n\n.ivy-modal-btn-confirm {\n    background: #1890ff;\n    border-color: #1890ff;\n    color: #fff;\n}\n\n.ivy-modal-btn-confirm:hover {\n    background: #40a9ff;\n    border-color: #40a9ff;\n}\n","import {\n    Component,\n    Event,\n    EventEmitter,\n    Host,\n    Method,\n    Prop,\n    h,\n} from \"@stencil/core\";\n\n@Component({\n    tag: \"d-modal\",\n    styleUrl: \"d-modal.css\",\n    shadow: true,\n})\nexport class DModal {\n    @Prop({\n        attribute: \"show\",\n        mutable: true,\n        reflect: true,\n    })\n    show: boolean = false;\n\n    @Prop()\n    width: string = \"520px\";\n\n    @Prop({\n        attribute: \"show-header\",\n        mutable: true,\n        reflect: true,\n    })\n    showHeader: boolean = true;\n\n    @Prop({\n        attribute: \"header\",\n    })\n    header: string = \"\";\n\n    @Prop({\n        attribute: \"mask-closable\",\n        mutable: true,\n        reflect: true,\n    })\n    maskClosable: boolean = true;\n\n    @Prop({\n        attribute: \"show-footer\",\n        mutable: true,\n        reflect: true,\n    })\n    showFooter: boolean = true;\n\n    @Prop({\n        attribute: \"confirm-text\",\n    })\n    confirmText: string = \"确定\";\n\n    @Prop({\n        attribute: \"cancel-text\",\n    })\n    cancelText: string = \"取消\";\n\n    renderHeader() {\n        if (this.showHeader) {\n            return (\n                <div class=\"ivy-modal-header\">\n                    <div class=\"ivy-modal-title\">\n                        <slot name=\"header\">{this.header}</slot>\n                    </div>\n                    <div\n                        class=\"ivy-modal-close\"\n                        onClick={this.close.bind(this)}>\n                        ×\n                    </div>\n                </div>\n            );\n        } else {\n            return null;\n        }\n    }\n\n    renderFooter() {\n        if (this.showFooter) {\n            return (\n                <div class=\"ivy-modal-footer\">\n                    <button\n                        class=\"ivy-modal-btn ivy-modal-btn-cancel\"\n                        onClick={this.cancel.bind(this)}>\n                        {this.cancelText}\n                    </button>\n                    <button\n                        class=\"ivy-modal-btn ivy-modal-btn-confirm\"\n                        onClick={this.confirm.bind(this)}>\n                        {this.confirmText}\n                    </button>\n                </div>\n            );\n        } else {\n            return null;\n        }\n    }\n\n    render() {\n        return (\n            <Host show={this.show}>\n                <div\n                    class=\"ivy-mask\"\n                    onClick={this.maskClose.bind(this)}></div>\n                <div\n                    class=\"ivy-modal\"\n                    style={{ width: this.width }}>\n                    {this.renderHeader()}\n                    <div class=\"ivy-modal-body\">\n                        <slot></slot>\n                    </div>\n                    {this.renderFooter()}\n                </div>\n            </Host>\n        );\n    }\n\n    @Event() onClose: EventEmitter;\n    @Event() onConfirm: EventEmitter;\n    @Event() onCancel: EventEmitter;\n\n    closeHandler() {\n        this.onClose.emit();\n    }\n\n    confirmHandler() {\n        this.onConfirm.emit();\n    }\n\n    cancelHandler() {\n        this.onCancel.emit();\n    }\n\n    @Method()\n    async open() {\n        this.show = true;\n    }\n\n    @Method()\n    async close() {\n        this.closeHandler();\n        this.show = false;\n    }\n\n    @Method()\n    async confirm() {\n        this.confirmHandler();\n        this.show = false;\n    }\n\n    @Method()\n    async cancel() {\n        this.cancelHandler();\n        this.show = false;\n    }\n\n    maskClose() {\n        if (this.maskClosable) {\n            this.show = false;\n        }\n    }\n}\n"],"version":3}